/*
 * HansTCP.h
 *
 *  Created on: Jul 23, 2016
 *      Author: agv
 */

#ifndef HANS_INCLUDE_HANSTCP_H_
#define HANS_INCLUDE_HANSTCP_H_


#include <string>
#include <memory>

#include <HansTransport.h>

namespace HansMotor
{
  /**
   * This class implements a udp interface to a Segway rmp.
   */
  class HansTcp: public HansTransport
  {
  public:
    /**
     * @defgroup segway_RmpUdp_RmpUdp_throw ExceptionTitle
     * @throw std::runtime_error if unable to connect to the socket
     */

    /**
     * Constructor
     * @param rIpAddress ip address of the rmp
     * @param portNumber port number of the rmp
     * @copydetails segway_RmpUdp_RmpUdp_throw
     */
    HansTcp(const std::string& rIpAddress, uint16_t portNumber);

    /**
     * Destructor
     */
    virtual ~HansTcp();

    /**
     * Send command to rmp
     * @param commandId command id
     * @param value1 first value
     * @param value2 second value
     * @result wether the command was properly sent
     */
    virtual bool Send(uint16_t commandId, uint32_t value1, uint32_t value2);

    /**
     * Receive response from rmp
     * @param rData response
     * @param size expected size of data to receive [in byte]
     * @result wether the data were properly received
     */
    virtual bool Receive(Bytes& rData, size_t size);

  private:
    /**
     * Pointer to implementation
     */
    class Impl;
    std::unique_ptr<Impl> m_pImpl;
  }; // class RmpUdp  HansTcp
} // namespace segway HansMotor


#endif /* HANS_INCLUDE_HANSTCP_H_ */
