/*
 * HansTransport.h
 *
 *  Created on: Jul 23, 2016
 *      Author: agv
 */

#ifndef HANS_INCLUDE_HANSTRANSPORT_H_
#define HANS_INCLUDE_HANSTRANSPORT_H_

#include <memory>

#include <HansType.h>

namespace HansMotor
{
  /**
   * This class is an abstract base class.
   * It represents a communication transport between a host and a Rmp.
   */
  class HansTransport
  {
  public:
    typedef std::shared_ptr<HansTransport> Ptr;

    /**
     * Destructor
     */
    virtual ~HansTransport()
    {}

    /**
     * Send command to rmp
     * @param commandId command id
     * @param value1 first value
     * @param value2 second value
     * @result wether the command was properly sent
     */
    virtual bool Send(uint16_t commandId, uint32_t value1, uint32_t value2) = 0;

    /**
     * Receive response from rmp
     * @param rData response
     * @param size expected size of data to receive [in byte]
     * @result wether the data were properly received
     */
    virtual bool Receive(Bytes& rData, size_t size) = 0;
  }; // class RmpTransport HansTransport
} // namespace segway HansMotor




#endif /* HANS_INCLUDE_HANSTRANSPORT_H_ */
